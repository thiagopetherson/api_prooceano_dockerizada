FROM composer:2.5 as vendor
WORKDIR /app
COPY composer.json composer.lock ./
RUN composer install \
  --ignore-platform-reqs \
  --no-interaction \
  --no-plugins \
  --no-scripts \
  --prefer-dist

FROM alpine:3.17
WORKDIR /var/www/html

ARG APP_ENV="production" \
  APP_DEBUG=false \
  LOG_CHANNEL=single \
  DB_CONNECTION=mysql

RUN echo "UTC" > /etc/timezone
RUN apk update \
  && apk upgrade \
  && apk add --update bash zip unzip curl nginx supervisor gettext \
  php82 php82-common php82-fpm php82-pdo php82-opcache \
  php82-zip php82-phar php82-iconv php82-cli php82-curl php82-openssl php82-mbstring \
  php82-tokenizer php82-fileinfo php82-json php82-xml php82-xmlwriter php82-simplexml \
  php82-dom php82-pdo_mysql php82-tokenizer php82-pecl-redis \
  && rm -rf /var/cache/apk/*
RUN sed -i 's/bin\/ash/bin\/bash/g' /etc/passwd

COPY .docker/ /

RUN mkdir -p /run/php/ \
  && touch /run/php/php8.2-fpm.pid \
  && mkdir -p /run/nginx/ \
  && touch /run/nginx/nginx.pid \
  && chown -R nobody:nobody /var/lib/nginx

COPY . .
COPY --from=vendor /app/vendor ./vendor

RUN chmod -R 2777 ./storage ./bootstrap

# Criando um diretório para o arquivo de configuração do Supervisor e copie-o
RUN mkdir -p /etc/supervisor.d/
COPY .docker/etc/supervisor/supervisord.conf /etc/supervisor.d/supervisord.conf

RUN chmod +x /replace_env_with_args.sh /docker-entrypoint.sh \
  && bash /replace_env_with_args.sh

EXPOSE 80

VOLUME /var/html/www/storage/logs

ENTRYPOINT [ "/docker-entrypoint.sh" ]

# Inicie o Supervisor com a configuração do arquivo supervisord.conf
CMD supervisord -c /etc/supervisor.d/supervisord.conf
